def dots2coords(s):
    coords = []
    for lineno, line in enumerate(s.splitlines()):
        for col in range(2):
            if len(line) > col and line[col] == "#":
                coords.append((col, lineno))
    return coords

coordbit = {
    (0, 0): 0,
    (0, 1): 1,
    (0, 2): 2,
    (1, 0): 3,
    (1, 1): 4,
    (1, 2): 5,
    (0, 3): 6,
    (1, 3): 7,
}

def coords2bits(coords):
    bits = []
    for coord in coords:
        bits.append(coordbit[coord])
    return bits

def bits2utf8code(bits):
    base = 10240
    offset = 0
    for bit in bits:
        offset += 1 << bit
    return base + offset

fontmap = "abcdefghijklmnopqrstuvwxyzåäö!\"'0123456789-+_ .,"

bitmap="""     5    1    5    2    5    3    5    4    5    5    5    6    5    7    5   x
   #      #####      ####     ####      ####      ####       ###      #   #    x
  # #     #  #      #         #   #     #         #         #         #   #    x
 #####    #####     #         #   #     ###       ###       #  ##     #####    x
 #   #    ####       ####     ####      ####      #          ####     #   #    x
     5    1    5    2    5    3    5    4    5    5    5    6    5    7    5   x
  #          #      #   #     #         #    #    #   #      ####     ####     x
  #          #      #  #      #         ##  ##    ##  #     #    #    #   #    x
  #       #  #      ####      #         # ## #    # # #     #    #    ####     x
  #        ##       #   #     ####      #    #    #  ##      ####     #        x
     5    1    5    2    5    3    5    4    5    5    5    6    5    7    5   x
 ####     ####       ####     #####     #   #     #   #     #    #    #   #    x
#    #    #   #     #           #       #   #     #   #     # ## #     # #     x
#  # #    ####       ####       #       #   #      # #      ##  ##      #      x
 #####    #  ##     #####       #        ###        #       #    #    ## ##    x
     5    1    5    2    5    3    5    4    5    5    5    6    5    7    5   x
#   #     #####       ##      #    #    #    #      #        #  #        #     x
 # #         #        ##        ##        ##        #       #  #        #      x
  #         #        ####      ####      #  #                                  x
  #       #####     #    #    #    #      ##        #                          x
     5    1    5    2    5    3    5    4    5    5    5    6    5    7    5   x
 ###        #       ####      ####        # #     ####       ##       #####    x
#   #      ##           #        #       #  #     #         #            #     x
#   #       #        ##        ####     #####     ####      #####       #      x
 ###        #       #####     ####          #     ###        ###        #      x
     5    1    5    2    5    3    5    4    5    5    5    6    5    7    5   x
  ###      ###                  #                                              x
 #   #    #   #     ######    #####                                            x
 #####     ####                 #                                       #      x
  ###         #                         ####                 #         ##      x
     5    1    5    2    5    3    5    4    5    5    5    6    5    7    5   x
     5    1    5    2    5    3    5    4    5    5    5    6    5    7    5   x
     5    1    5    2    5    3    5    4    5    5    5    6    5    7    5   x
     5    1    5    2    5    3    5    4    5    5    5    6    5    7    5   x
"""


def braille(dotstr):
    s = ""
    lines = dotstr.splitlines()[1:]
    col = 0
    lin = 0
    while col+2 <= len(lines[0]) and lin+4 <= len(lines):
        dots = ""
        for line in range(lin, lin + 4):
            dots += lines[line][col:col+2] + "\n"

        coords = dots2coords(dots)
        bits = coords2bits(coords)
        ucode = bits2utf8code(bits)
        s += chr(ucode)

        col += 2
        if col+2 >= len(lines[0]):
            lin += 4
            col = 0
            s += "\n"
    return s

def txt2dots(txt):
    dots = [[] for _ in range(5)]
    for c in txt:
        i = fontmap.index(c)
        if i < 0:
            continue
        y = i // 8
        x = i - y * 8
        for dx in range(8):
            for dy in range(4):
                dt = (y*5+dy+1)*81 + (x*10) + dx
                dots[dy].append(bitmap[dt])
    return dots

def dots2str(dots):
    s = "\n".join("".join(line) + " "*5 for line in dots)
    s = " " * len(s.splitlines()[0]) + "\n" + s
    return s

def render(txt):
    dots = txt2dot(txt)
    s = dots2str(dots)
    return braille(s)

def dots_rotate(dots, offset):
    for index, line in enumerate(dots):
        dots[index] = line[-offset:] + line[:-offset]

if __name__ == "__main__":
    import sys
    if len(sys.argv) == 1:
        sys.stdout.write(braille(bitmap))
        sys.exit(0)
    txt = sys.argv[1]
    dots = txt2dots(txt)
    import time
    while True:
        sys.stdout.write(braille(dots2str([l[:100] for l in dots])).strip() + "\r")
        sys.stdout.flush()
        time.sleep(0.02)
        dots_rotate(dots, -1)
